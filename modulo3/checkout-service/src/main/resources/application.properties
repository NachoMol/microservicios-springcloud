spring.application.name= checkout-service
server.port= 8082

#con esto podemos configurar los endpoints expuestos
management.endpoints.web.exposure.include= health,info,circuitbreakers,circuitbreakerevents

management.health.circuitbreakers.enabled =true

management.endpoint.health.show-details= always

eureka.client.serviceUrl.defaultZone= http://checkout-service:8761/eureka/
management.info.env.enabled= true
info.app.name= checkout-service
info.app.description = microservicio
info.app.version = 1.0.0

spring.cloud.config.enabled=true
spring.cloud.config.discovery.enabled=true
spring.cloud.config.discovery.serviceId=config-server
spring.cloud.config.import-check.enabled=true
spring.config.import=optional:configserver:
eureka.instance.hostname=localhost

loadbalancer.client.name=products-service

spring.cloud.loadbalancer.configurations=weighted

spring.security.oauth2.resourceserver.jwt.issuer-uri= http://localhost:8080/realms/dh

resilience4j.circuitbreaker.instances.product.allowHealthIndicatorToFail= false
resilience4j.circuitbreaker.instances.product.registerHealthIndicator= true

resilience4j.circuitbreaker.instances.product.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.product.slidingWindowSize= 5
resilience4j.circuitbreaker.instances.product.failureRateTreshold= 50

resilience4j.circuitbreaker.instances.product.waitDurationInOpenState= 15000
resilience4j.circuitbreaker.instances.product.permittedNumberOfCallsInHalfOpenState= 3
resilience4j.circuitbreaker.instances.product.automaticTransitionFromOpenToHalfOpenEnabled= true

resilience4j.retry.instances.product.maxAttempts = 3
resilience4j.retry.instances.product.waitDuration = 500
resilience4j.retry.instances.product.retryExceptions[0]= feign.FeignException$InternalServerError

management.tracing.sampling.probability = 1.0